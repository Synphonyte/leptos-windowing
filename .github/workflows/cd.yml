on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /
  workflow_dispatch:

name: CD

permissions: write-all

jobs:
  test:
    name: Test ${{ matrix.crate }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - leptos-windowing
          - leptos-pagination
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy, rust-src
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.crate }}

      - name: Check formatting
        run: cargo fmt --check -p ${{ matrix.crate }}
      - name: Clippy
        run: cargo clippy -p ${{ matrix.crate }} --tests -- -D warnings
      - name: Check if the README is up to date.
        run: |
          cargo install cargo-rdme
          cargo rdme --check
      - name: Run tests
        run: cargo test -p ${{ matrix.crate }}

  publish:
    name: Publish ${{ matrix.crate }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        crate:
          - leptos-windowing
          - leptos-pagination
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy, rust-src
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.crate }}

      - name: Handle dependency for leptos-pagination
        if: matrix.crate == 'leptos-pagination'
        run: |
          cd leptos-pagination
          # Check if leptos-windowing is already published with the current version
          WINDOWING_VERSION=$(grep 'version = "' ../leptos-windowing/Cargo.toml | head -1 | sed 's/.*version = "\(.*\)".*/\1/')
          echo "Checking if leptos-windowing $WINDOWING_VERSION is available on crates.io..."

          # Try to fetch the crate info, if it fails, the version doesn't exist yet
          if ! cargo search leptos-windowing --limit 1 | grep -q "leptos-windowing = \"$WINDOWING_VERSION\""; then
            echo "leptos-windowing $WINDOWING_VERSION not found on crates.io. Using path dependency."
          else
            echo "leptos-windowing $WINDOWING_VERSION found on crates.io. Updating dependency."
            sed -i 's/leptos-windowing = { version = "[^"]*", path = "[^"]*" }/leptos-windowing = "'"$WINDOWING_VERSION"'"/' Cargo.toml
          fi

      - name: Publish ${{ matrix.crate }}
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CRATES_TOKEN }}
          path: ${{ matrix.crate }}
          args: --no-verify

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v4

      - uses: CSchoel/release-notes-from-changelog@v1
      - name: Create Release using GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release create
          -d
          -F RELEASE.md
          -t "Version $RELEASE_VERSION"
          ${GITHUB_REF#refs/*/}
